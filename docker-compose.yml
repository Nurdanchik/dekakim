version: "3.9"

services:
  postgres:
    image: postgres:14
    container_name: dekakim-postgres
    restart: always
    environment:
      POSTGRES_DB: dekakim_db
      POSTGRES_USER: dekakim_user
      POSTGRES_PASSWORD: dekakim_password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dekakim

  backend:
    build:
      context: ./src
    container_name: dekakim-backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./src:/usr/src/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - dekakim

  nginx:
    image: nginx:latest
    container_name: dekakim-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    depends_on:
      - backend
    networks:
      - dekakim

  certbot:
    image: certbot/certbot
    container_name: dekakim-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done'"
    networks:
      - dekakim

volumes:
  pgdata:
  static_volume:
  media_volume:
  certbot-etc:
  certbot-var:

networks:
  dekakim: